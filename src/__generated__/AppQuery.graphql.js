/**
 * This file was generated by:
 *   relay-compiler
 *
 * @providesModule AppQuery.graphql
 * @generated SignedSource<<b7f3b529f774617655b98e6f29966ac3>>
 * @relayHash 6fda85f86c3127ee19e66669397b9eb5
 * @flow
 * @nogrep
 */

/* eslint-disable */

'use strict';

/*::
import type {ConcreteBatch} from 'relay-runtime';

*/


/*
query AppQuery {
  postById(id: 3) {
    headline
  }
}
*/

const batch /*: ConcreteBatch*/ = {
  "fragment": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": null,
    "name": "AppQuery",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": 3,
            "type": "Int!"
          }
        ],
        "concreteType": "Post",
        "name": "postById",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "headline",
            "storageKey": null
          }
        ],
        "storageKey": "postById{\"id\":3}"
      }
    ],
    "type": "Query"
  },
  "id": null,
  "kind": "Batch",
  "metadata": {},
  "name": "AppQuery",
  "query": {
    "argumentDefinitions": [],
    "kind": "Root",
    "name": "AppQuery",
    "operation": "query",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": 3,
            "type": "Int!"
          }
        ],
        "concreteType": "Post",
        "name": "postById",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "args": null,
            "name": "headline",
            "storageKey": null
          }
        ],
        "storageKey": "postById{\"id\":3}"
      }
    ]
  },
  "text": "query AppQuery {\n  postById(id: 3) {\n    headline\n  }\n}\n"
};

module.exports = batch;
